use Mix.Config

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with brunch.io to recompile .js and .css sources.
config :violacorp,
       ViolacorpWeb.Endpoint,
       #       http: [ ip: {91,192,192,18}, port: 80 ],
       http: [
         port: System.get_env("VC_PORT")
       ],
       debug_errors: true,
       code_reloader: true,
       check_origin: false,
       watchers: []

config :cloak,
       Cloak.AES.CTR,
       default: true,
       tag: System.get_env("VC_CLOAK_TAG"),
       keys: [
         %{tag: <<1>>, key: Base.decode64!(System.get_env("VC_CLOAK_KEY")), default: true}
       ]
#
#config :fcmex,
#       server_key: "a_example_key"

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# command from your terminal:
#
#     openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com" -keyout priv/server.key -out priv/server.pem
#
# The `http:` config above can be replaced with:
#
#     https: [port: 4000, keyfile: "priv/server.key", certfile: "priv/server.pem"],
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports..

# Watch static and templates for browser reloading.
config :violacorp,
       ViolacorpWeb.Endpoint,
       live_reload: [
         patterns: [
           ~r{priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$},
           ~r{priv/gettext/.*(po)$},
           ~r{lib/violacorp_web/views/.*(ex)$},
           ~r{lib/violacorp_web/templates/.*(eex)$}
         ]
       ]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

config :exq,
       host: System.get_env("VC_EXQ_HOST"),
       port: System.get_env("VC_EXQ_PORT"),
       namespace: System.get_env("VC_EXQ_NAMESPACE"),
       concurrency: System.get_env("VC_EXQ_CONCURRENCY"),
       queues: [
         "email",
         "sms",
         "notification",
         "manual_load",
         "generate_report",
         "pending_transactions_updater",
         "pending_single_transactions_updater",
         "success_transactions_updater",
         "clearbank_transactions",
         "daily_cardsbalances_sender"
       ]

config :exq_ui,
       server: true

config :pigeon,
       :apns,
       apns_default: %{
         cert: System.get_env("VC_LOCAL_APNS_CERT"),
         key: System.get_env("VC_LOCAL_APNS_KEY"),
         mode: :dev
       }

config :pigeon,
       :fcm,
       fcm_default: %{
         key: System.get_env("VC_LOCAL_FCM_KEY")
       }

config :violacorp,Violacorp.Mailer,
       adapter: Bamboo.LocalAdapter
#       deliver_later_strategy: Violacorp.BambooExqStrategy


config :violacorp,
       Violacorp.Scheduler,
       jobs: [
         monthly_fee: [
           schedule: "@daily",
           task: {ViolacorpWeb.Main.CronController, :companyMonthlyFee, []},
         ],
         success_transactions: [
           schedule: "@daily",
           task: {ViolacorpWeb.Main.CronController, :employeeSuccessTransaction, []},
         ],
         clearbank_transactions: [
           schedule: "@daily",
           task: {ViolacorpWeb.Test.TestController, :clearank_transactions, []},
         ]
       ]

# Configure your database
config :violacorp,
       Violacorp.Repo,
       adapter: Ecto.Adapters.MySQL,
       username: System.get_env("VC_DB_USERNAME"),
       password: System.get_env("VC_DB_PASSWORD"),
       database: System.get_env("VC_DB_DATABASE"),
       hostname: System.get_env("VC_DB_HOST"),
       pool_size: 10

config :ex_aws,
       access_key_id: [{:system, "VC_AWS_ACCESS_KEY_ID"}, :instance_role],
       secret_access_key: [{:system, "VC_AWS_SECRET_ACCESS_KEY"}, :instance_role]

import_config "myconfig.dev.exs"
